---
title: "Publications"
echo: false
jupyter: python3
section-divs: false
keep-md: true
---

```{python}
import yaml
from IPython.display import display, Markdown, HTML

def readable_list(_s):
  if len(_s) < 3:
    return ' and '.join(map(str, _s))
  *a, b = _s
  return f"{', '.join(map(str, a))}, and {b}"

def button(url, str, icon):
    icon_base = icon[:2]
    return f"""<a class="btn btn-outline-dark btn-sm", href="{url}" target="_blank" rel="noopener noreferrer">
        <i class="{icon_base} {icon}" role='img' aria-label='{str}'></i>
        {str}
    </a>"""

yaml_data = yaml.safe_load(open("papers.yaml"))
pub_strs = {"pubs": {}}
for _, data in yaml_data.items():
    # Basic info
    title_str = data["title"]
    authors = data.get("authors", ["me"])
    authors = [aut if aut != "me" else "<strong>Julien Vitay</strong>" for aut in authors]
    author_str = readable_list(authors)
    year_str = data["year"]
    journal = data.get("journal")
    doi = data.get("doi")

    if year_str not in pub_strs["pubs"]:
        pub_strs["pubs"][year_str] = []

    # Build the html
    pub_str = f'{author_str} ({year_str}).<br><strong>{title_str}</strong>.'
    if journal is not None:
        pub_str += f"<br> <em>{journal}</em>"
    if doi is not None:
        pub_str += f'<br> <a href="https://doi.org/{doi}">doi:{doi}</a>'

    # Buttons
    buttons = []

    pub_url = data.get("url")
    if pub_url is not None:
        buttons.append(button(pub_url, "URL", "bi-journal"))

    pdf = data.get("pdf")
    if pdf is not None:
        buttons.append(button(pdf, "PDF", "bi-file-earmark-pdf"))

    preprint = data.get("preprint")
    if preprint is not None:
        buttons.append(button(preprint, "Preprint", "bi-file-earmark-pdf"))
        
    github = data.get("github")
    if github is not None:
        buttons.append(button(github, "Code", "bi-github"))

    poster = data.get("poster")
    if poster is not None:
        buttons.append(button(poster, "Poster", "bi-file-earmark-easel"))



    # Append
    pub_strs["pubs"][year_str].append(
        "<li class='list-group-item'>" + pub_str + "<br><br>" + " ".join(buttons) + "</li>"
    )
```


```{python}
#| label: "published-year"
#| id: "published-year"
#| output: asis
for year in sorted(pub_strs["pubs"].keys(), reverse=True):
    display(Markdown(f"### {year}" + "{#" + f"published-{year}" + "}"))
    display(HTML(
        "<ul class='list-group list-group-flush'>" + '\n'.join(pub_strs["pubs"][year]) + "</ul>"
    ))
```

