---
title: "Publications"
echo: false
section-divs: false
keep-md: false
---

```{python}
import yaml
from IPython.display import display, Markdown, HTML

def readable_list(_s):
    if len(_s) < 3:
        return ' and '.join(map(str, _s))
    *a, b = _s
    return f"{', '.join(map(str, a))}, and {b}"

def button(url, str, icon):
    icon_base = icon[:2]
    return f"""<a class="btn btn-outline-dark btn-sm" href="{url}" target="_blank" rel="noopener noreferrer"> <i class="{icon_base} {icon}" role='img' aria-label='{str}'></i> {str}</a>"""

def format_citation(data):

    # Basic info
    title_str = data["title"]
    author_str = readable_list(data.get("authors"))
    year_str = data["year"]
    journal = data.get("journal")
    doi = data.get("doi")
    url = data.get("url")

    # Build the markdown
    md_string = f"""
{author_str} ({year_str}) <br>
**{title_str}**  <br>
"""
    if journal is not None:
        md_string += f"{journal}  <br>\n"
    if doi is not None:
        md_string += f'[doi:{doi}](https://doi.org/{doi}) <br>\n'

    # Buttons
    buttons = []

    pub_url = data.get("url")
    if pub_url is not None:
        buttons.append(button(pub_url, "URL", "bi-journal"))

    pdf = data.get("pdf")
    if pdf is not None:
        buttons.append(button(pdf, "PDF", "bi-file-earmark-pdf"))

    preprint = data.get("preprint")
    if preprint is not None:
        buttons.append(button(preprint, "Preprint", "bi-file-earmark-pdf"))
        
    github = data.get("github")
    if github is not None:
        buttons.append(button(github, "Code", "bi-github"))

    poster = data.get("poster")
    if poster is not None:
        buttons.append(button(poster, "Poster", "bi-file-earmark-easel"))

    # Append
    return md_string + "\n\n" + "\n".join(buttons) + "\n\n---\n\n"


# Read the yaml file
yaml_data = yaml.safe_load(open("papers.yaml"))

def add_item(list_pubs, data, code):
    year_str = data["year"]
    if year_str not in list_pubs:
        list_pubs[year_str] = []
    list_pubs[year_str].append(code)


# Containers
all_types = {}
journals = {}
proceedings = {}
bookchapters = {}
theses = {}

# Process the descriptions as they come
for _, data in yaml_data.items():

    # Format the citation
    code = format_citation(data)

    # Add the the main list
    add_item(all_types, data, code)

    if data.get("type") == 'journal':
        add_item(journals, data, code)
    elif data.get("type") == 'proceedings':
        add_item(proceedings, data, code)
    elif data.get("type") == 'bookchapter':
        add_item(bookchapters, data, code)
    elif data.get("type") == 'thesis':
        add_item(theses, data, code)



```


```{python}
#| label: "published-year"
#| id: "published-year"
#| output: asis 

def generate_markown(publications):

    for year in sorted(publications.keys(), reverse=True):
        # Organize per year
        display(Markdown(f"### {year}"))
        # Show the markdown
        display(Markdown('\n'.join(publications[year])))

# All
display(Markdown("""
::: {.panel-tabset}
## All

"""))
generate_markown(all_types)

# Journals
display(Markdown("""

## Journals

"""))
generate_markown(journals)

# Proceedings
display(Markdown("""

## Conference proceedings

"""))
generate_markown(proceedings)

# Book chapters
display(Markdown("""

## Book chapters

"""))
generate_markown(bookchapters)

# Theses
display(Markdown("""

## Theses

"""))

generate_markown(theses)

display(Markdown("""
:::
"""))
```

